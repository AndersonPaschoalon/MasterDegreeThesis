\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+c1}{// This implementation is just a simplified version to illustrate the procedure.}
\PYG{k+kt}{void} \PYG{n}{DitgFlow}\PYG{o}{::}\PYG{n}{flowGenerate}\PYG{p}{(}\PYG{k}{const} \PYG{n}{counter}\PYG{o}{\PYGZam{}} \PYG{n}{flowId}\PYG{p}{,} \PYG{k}{const} \PYG{n}{time\PYGZus{}sec}\PYG{o}{\PYGZam{}} \PYG{n}{onTime}\PYG{p}{,} \PYG{k}{const} \PYG{n}{uint}\PYG{o}{\PYGZam{}} \PYG{n}{npackets}\PYG{p}{,} \PYG{k}{const} \PYG{n}{uint}\PYG{o}{\PYGZam{}} \PYG{n}{nbytes}\PYG{p}{,}  \PYG{k}{const} \PYG{n}{string}\PYG{o}{\PYGZam{}} \PYG{n}{netInterface}\PYG{p}{)}
\PYG{p}{\PYGZob{}}
    \PYG{c+c1}{// create command to generate the traffic}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{strCommand}\PYG{p}{;}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{localhost} \PYG{o}{=} \PYG{n}{getNetworkSrcAddr}\PYG{p}{();}
    \PYG{n}{strCommand} \PYG{o}{+=} \PYG{l+s}{\PYGZdq{} \PYGZhy{}t \PYGZdq{}} \PYG{o}{+} \PYG{n}{std}\PYG{o}{::}\PYG{n}{to\PYGZus{}string}\PYG{p}{(}\PYG{n}{onTime}\PYG{p}{);}
    \PYG{n}{strCommand} \PYG{o}{+=} \PYG{l+s}{\PYGZdq{} \PYGZhy{}k \PYGZdq{}} \PYG{o}{+} \PYG{n}{std}\PYG{o}{::}\PYG{n}{to\PYGZus{}string}\PYG{p}{(}\PYG{n}{nbytes} \PYG{o}{/} \PYG{l+m+mi}{1024}\PYG{p}{);}
    \PYG{n}{strCommand} \PYG{o}{+=} \PYG{l+s}{\PYGZdq{} \PYGZhy{}a \PYGZdq{}} \PYG{o}{+} \PYG{n}{getNetworkDstAddr}\PYG{p}{();}

    \PYG{c+c1}{// configure protocol}
    \PYG{k}{if} \PYG{p}{(}\PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{getTransportProtocol}\PYG{p}{()} \PYG{o}{==} \PYG{n}{PROTOCOL\PYGZus{}\PYGZus{}TCP}\PYG{p}{)}
        \PYG{n}{strCommand} \PYG{o}{+=} \PYG{l+s}{\PYGZdq{} \PYGZhy{}T TCP \PYGZhy{}D \PYGZdq{}}\PYG{p}{;}
    \PYG{k}{else} \PYG{n+nf}{if} \PYG{p}{(}\PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{getTransportProtocol}\PYG{p}{()} \PYG{o}{==} \PYG{n}{PROTOCOL\PYGZus{}\PYGZus{}UDP}\PYG{p}{)}
        \PYG{n}{strCommand} \PYG{o}{+=} \PYG{l+s}{\PYGZdq{} \PYGZhy{}T UDP \PYGZdq{}}\PYG{p}{;}
    \PYG{k}{else} \PYG{n+nf}{if} \PYG{p}{(}\PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{getTransportProtocol}\PYG{p}{()} \PYG{o}{==} \PYG{n}{PROTOCOL\PYGZus{}\PYGZus{}ICMP}\PYG{p}{)}
        \PYG{n}{strCommand} \PYG{o}{+=} \PYG{l+s}{\PYGZdq{} \PYGZhy{}T ICMP \PYGZdq{}}\PYG{p}{;}

    \PYG{c+c1}{//configure inter\PYGZhy{}packet time model, just Weibull or Constant}
    \PYG{n}{StochasticModelFit} \PYG{n}{idtModel}\PYG{p}{;}
    \PYG{k}{for}\PYG{p}{(}\PYG{n}{uint} \PYG{n}{i} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;;}\PYG{n}{i}\PYG{o}{++}\PYG{p}{)}
    \PYG{p}{\PYGZob{}}
        \PYG{n}{idtModel} \PYG{o}{=} \PYG{k}{this}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{getInterDepertureTimeModel}\PYG{p}{(}\PYG{n}{i}\PYG{p}{);}
        \PYG{k}{if}\PYG{p}{(}\PYG{n}{idtModel}\PYG{p}{.}\PYG{n}{modelName}\PYG{p}{()} \PYG{o}{==} \PYG{n}{WEIBULL}\PYG{p}{)}
        \PYG{p}{\PYGZob{}}
            \PYG{n}{strCommand} \PYG{o}{+=} \PYG{l+s}{\PYGZdq{} \PYGZhy{}W \PYGZdq{}} \PYG{o}{+} \PYG{n}{std}\PYG{o}{::}\PYG{n}{to\PYGZus{}string}\PYG{p}{(}\PYG{n}{idtModel}\PYG{p}{.}\PYG{n}{param1}\PYG{p}{())} \PYG{o}{+} \PYG{l+s}{\PYGZdq{} \PYGZdq{}} \PYG{o}{+} \PYG{n}{std}\PYG{o}{::}\PYG{n}{to\PYGZus{}string}\PYG{p}{(}\PYG{n}{idtModel}\PYG{p}{.}\PYG{n}{param2}\PYG{p}{());}
            \PYG{k}{break}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}
        \PYG{k}{else} \PYG{k}{if} \PYG{p}{(} \PYG{n}{idtModel}\PYG{p}{.}\PYG{n}{modelName}\PYG{p}{()} \PYG{o}{==} \PYG{n}{CONSTANT}\PYG{p}{)}
        \PYG{p}{\PYGZob{}}
            \PYG{n}{strCommand} \PYG{o}{+=} \PYG{l+s}{\PYGZdq{} \PYGZhy{}C \PYGZdq{}} \PYG{o}{+} \PYG{n}{std}\PYG{o}{::}\PYG{n}{to\PYGZus{}string}\PYG{p}{(}\PYG{n}{nbytes}\PYG{o}{/}\PYG{p}{(}\PYG{l+m+mi}{1024}\PYG{o}{*}\PYG{n}{onTime}\PYG{p}{));}
            \PYG{k}{break}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}

    \PYG{c+c1}{// it uses C strings as arguments}
    \PYG{c+c1}{// it is not blocking, so it must block until finishes}
    \PYG{k+kt}{int} \PYG{n}{rc} \PYG{o}{=} \PYG{n}{DITGsend}\PYG{p}{(}\PYG{n}{localhost}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{(),} \PYG{n}{command}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{());} \PYG{c+c1}{// D\PYGZhy{}ITG API}
    \PYG{n}{usleep}\PYG{p}{(}\PYG{n}{onTime}\PYG{o}{*}\PYG{l+m+mf}{10e6}\PYG{p}{);} \PYG{c+c1}{// D\PYGZhy{}ITG uses miliseconds as time unity}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{rc} \PYG{o}{!=} \PYG{l+m+mi}{0}\PYG{p}{)}
    \PYG{p}{\PYGZob{}}
        \PYG{n}{PLOG\PYGZus{}ERROR} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}DITGsend() return value was\PYGZdq{}} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{rc} \PYG{p}{;} \PYG{c+c1}{// our log macro for erros}
        \PYG{n}{exit}\PYG{p}{(}\PYG{n}{EXIT\PYGZus{}FAILURE}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
