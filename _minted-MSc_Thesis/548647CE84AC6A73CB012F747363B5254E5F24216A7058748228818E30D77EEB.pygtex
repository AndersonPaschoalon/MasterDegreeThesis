\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+c1}{\PYGZsh{} @ SIMITAR/, load enviroment variables}
\PYG{n+nb}{source} data/config/simitar\PYGZhy{}workspace\PYGZhy{}config.sh

\PYG{c+c1}{\PYGZsh{} @ SIMITAR/sniffer/, execute to sniff the eth0 interface, and create a trace entry called \PYGZdq{}intrig\PYGZdq{} in the database}
./sniffer\PYGZhy{}cli.py new intrig live eth0

\PYG{c+c1}{\PYGZsh{} @ SIMITAR/sniffer/, execute this command to list all traces recorded in the database}
./sniffer\PYGZhy{}cli.py list

\PYG{c+c1}{\PYGZsh{} @ SIMITAR/trace\PYGZhy{}analyzer/, execute this command to create two Compact Trace Descriptors, called intrig.ms.xml and intrig.sec.xml. The first is parameterized using milliseconds, and de second uses seconds as time unity.}
./trace\PYGZhy{}analyzer \PYGZhy{}\PYGZhy{}trace intrig

\PYG{c+c1}{\PYGZsh{} @ SIMITAR/simitar\PYGZhy{}gen/, execute these commands to generate traffic using the intrig.sec.xml compact trace descriptor. It is stored at the directory \PYGZdq{}../data/xml/\PYGZdq{}.}
\PYG{c+c1}{\PYGZsh{} Libtins}
./simitar\PYGZhy{}gen \PYGZhy{}\PYGZhy{}tool tins \PYGZhy{}\PYGZhy{}mode client \PYGZhy{}\PYGZhy{}ether eth0 \PYGZhy{}\PYGZhy{}xml ../data/xml/intrig.sec.xml
\PYG{c+c1}{\PYGZsh{} Iperf}
./simitar\PYGZhy{}gen \PYGZhy{}\PYGZhy{}tool iperf \PYGZhy{}\PYGZhy{}mode client \PYGZhy{}\PYGZhy{}ether eth0 \PYGZhy{}\PYGZhy{}xml ../data/xml/intrig.sec.xml \PYGZhy{}\PYGZhy{}dst\PYGZhy{}ip \PYG{l+m}{10}.0.0.2
./simitar\PYGZhy{}gen \PYGZhy{}\PYGZhy{}tool iperf \PYGZhy{}\PYGZhy{}mode server \PYGZhy{}\PYGZhy{}ether eth0 \PYGZhy{}\PYGZhy{}xml ../data/xml/intrig.sec.xml
\end{Verbatim}
